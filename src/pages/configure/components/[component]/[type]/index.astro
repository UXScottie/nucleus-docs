---
import ExampleConfigure from '../../../../../components/ExampleConfigure.astro';
import cesm from '@connectedhomes/nucleus/custom-elements.json';

const { component, type } = Astro.params;
const exampleFileMatcher = `/assets/examples/components/${component}/${type}.js`;

const examples = import.meta.glob("../../../../../assets/examples/components/**/*.js");
const htmlFile = Object.keys(examples).find((example) => example?.endsWith(exampleFileMatcher));
const htmlContent = await examples[htmlFile]().then(value => value.default);

export function getStaticPaths() {
  const examples = import.meta.glob("../../../../../assets/examples/components/**/*.js");
  const getComponentExample = (fileMatcher) => {
    return Object.keys(examples).filter((example) => example.indexOf(fileMatcher) > -1);
  } 
  return cesm.tags.flatMap((tag) => {
    const componentName = tag.name;
    const exampleComponentMatcher = `/assets/examples/components/${componentName}/`;
    const componentExamples = getComponentExample(exampleComponentMatcher);
    if(componentExamples) {
      return componentExamples.map((componentExample) => {
        const type = componentExample?.split(exampleComponentMatcher)[1].replaceAll('.js', '');
        return {
          params: {
            component: tag.name,
            type
          }
        };
      });
    } else {
      return {
        params: {
          component: tag.name,
          type: 'standard'
        }
      };
    }
  });
}
---
<main>
  <h1>Configure Example - {component}</h1>
  <div class="config-column">
    <ExampleConfigure componentName={component}>
      <Fragment set:html={htmlContent} />
    </ExampleConfigure>
  </div>
</main>

<style>
  main {
    font-family: "Roboto", sans-serif;
  }

  .config-content {
    display: none;  
  }
</style>

