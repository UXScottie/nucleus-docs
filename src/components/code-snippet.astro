---
import { createRenderer } from '@astrojs/starlight/expressive-code';
import { toHtml } from 'hast-util-to-html'

const { lang = 'html' } = Astro.props;
const slotContent = await Astro.slots.render('template').then((value) => value);

const {ec, themeStyles, baseStyles} = await createRenderer({
  themes:['github-dark', 'github-light'],
  useDarkModeMediaQuery: true
});
const { renderedGroupAst, styles } = await ec.render({
  code: slotContent,
  language: lang,
  meta: '',
});

let htmlContent = toHtml(renderedGroupAst);
const frameSelector = 'figure class="frame';
let index = htmlContent.indexOf(frameSelector);
if(index > 0) {
  htmlContent = htmlContent.split(frameSelector).join(`${frameSelector} not-content`);
}
// Collect styles and add them before the HTML content
const stylesToPrepend = [];
stylesToPrepend.push(baseStyles);
stylesToPrepend.push(themeStyles);
stylesToPrepend.push(...styles);
if (stylesToPrepend.length) {
  htmlContent = `<style>${[...stylesToPrepend].join('')}</style>${htmlContent}`;
}
---

<div set:html={htmlContent} />
