---
const { name } = Astro.props;
import jsdoc from "@connectedhomes/nucleus/ce-doc.json";
const placements = jsdoc.find((tag) => tag.name === name)?.placements;
---
<div style={placements?.length > 0 ? '' : 'display:none'}>
  <div style={placements?.length > 1 ? '' : 'display:none'}>
    <p>The {name} component can be used in the following components:</p>
    <ul>
      {placements?.map((placement) => {
        if (placement.indexOf(' > ') > -1) {
          const placementTree = placement.split(' > ');
          return <li><strong>&lt;{placementTree[1]}&gt;</strong> wrapped in <strong>&lt;{placementTree[0]}&gt;</strong></li>;
        }
        return <li><strong>&lt;{placement}&gt;</strong></li>;
      })}
    </ul>
  </div>
  <div style={placements?.length === 1 ? '' : 'display:none'}>
    <p>The {name} component can only be used as a child of the &lt;{placements.toString()}&gt; element</p>
  </div>
</div>

