---
const { name } = Astro.props;
import cem from "@connectedhomes/nucleus/custom-elements.json";

const compDetails = cem.tags.find((tag) => tag.name === name);
---

<table>
  <thead>
    <tr>
      <th>Attribute</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    {
      Object.entries(compDetails?.attributes).map(([attr, value]) => {
        return (
          <tr>
            <td>{value.name}</td>
            <td>{value.type}</td>
            <td>{value.default}</td>
            <td>{value.description}</td>
          </tr>
        );
      })
    }
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Property</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    {
      Object.entries(compDetails?.properties).map(([prop, value]) => {
        if (['slottedStyles'].includes(value.name)) {
          return undefined;
        }
        return (
          <tr>
            <td>{value.name}</td>
            <td>{value.type}</td>
            <td>{value.default}</td>
            <td>{value.description}</td>
          </tr>
        );
      })
    }
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Slot</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    {
      Object.entries(compDetails?.slots).map(([prop, value]) => {
        return (
          <tr>
            <td>{value.name ? value.name : 'N/A'}</td>
            <td>{value.description}</td>
          </tr>
        );
      })
    }
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Event</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    {
      Object.entries(compDetails?.events ?? []).map(([prop, value]) => {
        return (
          <tr>
            <td>{value.name}</td>
            <td>{value.description}</td>
          </tr>
        );
      })
    }
  </tbody>
</table>
