---
import type { Props } from "@astrojs/starlight/props";
import Default from '@astrojs/starlight/components/PageTitle.astro';
import { Image } from "astro:assets";

const toc = Astro.props.toc;
const { slug } = Astro.params;
const isComponentPage = (slug ?? '').indexOf('components/ns') > -1;
const componentName = Astro.props.slug?.replace('components/', '');
const mastheadImages = import.meta.glob("../assets/masthead/**/*");
const mastheadImage = mastheadImages[`../assets/masthead/${slug}.svg`];

const sectionTabImages = import.meta.glob("../assets/sectiontab/*");
---

<div class="masthead">
  <div class="title">
    <Default {...Astro.props}></Default>
    {
      isComponentPage && (
        <code>&lt;{componentName}&gt;</code>
      )
    }
  </div>
  {
    mastheadImage && (
      <div class="decoration">
        <Image src={mastheadImage()} alt="" {...Astro.props} />
      </div>
    )
  }
</div>

{
  isComponentPage && toc?.items?.length > 0 && (
    <section-tabs>
      <div class="sticky">
        <div class="section-tabs">
          {
          toc.items.filter((toc) => toc.text !== 'Top').map((toc) => {
            const sectionTabImage = sectionTabImages[`../assets/sectiontab/${toc.text?.toLowerCase()}.svg`];
            return (
              <a class="section-tab" href=`#${toc.slug}`>
                <Image src={sectionTabImage()} alt="" {...Astro.props} />
                <span>{toc.text}</span>
              </a>
              )
          })
        }
      </div>
    </div>
  </section-tabs>
  )
}

<script src="./NucleusSectionTabs"></script>

<style>
  .masthead {
    background-color: var(--ns-color-teal);
    margin-block-start: var(--sl-content-pad-x);
    margin-inline-start: var(--sl-content-pad-x);
    margin-inline-end: var(--sl-content-pad-x);
    padding-inline-start: var(--sl-content-pad-x);
    padding-inline-end: var(--sl-content-pad-x);
    border-radius: 1.25rem;
    display: flex;
    min-height: 96px;
  }

  .title {
    color: var(--ns-color-white);

    h1 {
      color: inherit;
      line-height: 1.16666;
    }

    code {
      font-size: var(--sl-text-3xl);
    }
  }

  .decoration {
    margin-block-start: 1rem;
    margin-inline-start: auto;
    width: 64px;
    height: 64px;

    /* NOTE: @drew - 2024-01-09 - overriding the inline styles for the image */
    img {
      width: 100% !important;
      height: 100% !important;
    }
  }

  .sticky {
    background-color: var(--sl-color-bg);
    position: sticky;
    top: var(--sl-nav-height);
    z-index: 1;
    padding-block-start: var(--sl-content-pad-x);
  }

  .section-tabs {
    background-color: var(--sl-color-gray-7);
    margin-inline-start: var(--sl-content-pad-x);
    margin-inline-end: var(--sl-content-pad-x);
    border-radius: 100px; /* NOTE: @drew - 2024-01-05 - random high number to get rounded ends */

    [href="#_top"] {
      display: none;
    }

    a {
      color: var(--sl-color-gray-2);
      text-decoration: none;
      font-weight: 500;
    }

    a:hover {
      text-decoration: underline;
    }
  }

  .section-tab {
    position: relative;
    display: inline-block;
    padding-inline-start: 48px;
    padding-inline-end: 32px;
    padding-block: 16px;
    font-size: var(--sl-text-sm);
    border-radius: 100px; /* NOTE: @drew - 2024-01-05 - random high number to get rounded ends */
    transition-property: background-color;
    transition-delay: 0ms;
    transition-duration: 1000ms;
    transition-timing-function: ease-in-out;

    img {
      position: absolute;
      top: 50%;
      left: 16px;
      transform: translateY(-50%);
      width: 1.25em;
      height: 1.25em;
    }

    &[aria-current] {
      background-color: var(--sl-color-gray-6);

    }

    &:hover::before,
    &:focus::before {
      background-color: var(--sl-color-gray-2);
    }
  }

  @media (width < 72rem) {
    .section-tabs {
      display: none;
    }
  }

  @media (min-width: 50rem) {
    .masthead {
      min-height: 116px;
    }

    .decoration {
      width: 84px;
      height: 84px;
    }
  }
</style>
